package edu.skku.finalproject.studyhelper.fragment;

import android.content.Context;//
import android.content.Intent;
import android.net.Uri;//
import android.os.Bundle;//
import android.support.v4.app.Fragment;//
import android.support.v4.app.FragmentManager;
import android.support.v7.widget.RecyclerView;//
import android.support.v7.widget.LinearLayoutManager;//
import android.telecom.TelecomManager;
import android.telephony.TelephonyManager;
import android.view.LayoutInflater;//
import android.view.View;//
import android.view.ViewGroup;//
import android.Manifest;
import android.content.Context;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Build;
import android.os.Handler;//
import android.os.HardwarePropertiesManager;
import android.os.Message;//
import android.support.annotation.NonNull;//
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;//
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;//
import android.widget.LinearLayout;//
import android.widget.TextView;//
import android.widget.Toast;//

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapsInitializer;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.LatLngBounds;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;


import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Calendar;

import edu.skku.finalproject.studyhelper.activity.MainActivity;
import edu.skku.finalproject.studyhelper.dto.MapJsonData;
import edu.skku.finalproject.studyhelper.R;

import edu.skku.finalproject.studyhelper.dto.Member;

public class MemberLocationFragment extends Fragment {
    Context mContext;
    SupportMapFragment mapF;
    GoogleMap Mmap;
    RecyclerView recyclerView;
    RecyclerView.Adapter adapter;
    RecyclerView.LayoutManager layoutManager;
    double lat;
    double lon;
    MapJsonData.ResultClass[] mapResults;
    Button bt;
    TextView tv_meetingtime;

    LinearLayout mapLayout;
    int CurrentTimeInt;
    int meetingTimeInt;
    LocationManager locationManager;
    String name = MainActivity.MYNAME;
    String att = "결석";
    LatLng currentLocation;
    Date CurrentTime = new Date();
    SimpleDateFormat timeFormat = new SimpleDateFormat("yyyy.MM.dd hh:mm");


    String meetingTime;
    Date meetingDate;


    public Date meetingDate(String meetingTime) {
        try {
            meetingDate = timeFormat.parse(meetingTime);
        } catch (ParseException e) {
            meetingDate = null;
            e.printStackTrace();
        }
        return meetingDate;
    }

    double meet_lat = 37.588072, meet_lon = 126.990980;



    boolean isPaused = false;


    public void updateMapInfo() {
        if (CurrentTimeInt > meetingTimeInt - 600) {
            MarkerOptions markerOptions = new MarkerOptions();
            for (int i = 0; i < MainActivity.studies.size(); i++) {
                if (MainActivity.studies.get(i).getStatus() == "진행") {
                    for (int j = 0; j < MainActivity.studies.get(i).getMembers().size(); j++) {
                        String[] latlngStr = MainActivity.studies.get(i).getMembers().get(j).getCurrentLocation().getLatlng().split(",");
                        Double lat = Double.valueOf(latlngStr[0]);
                        Double lng = Double.valueOf(latlngStr[1]);
                        markerOptions.position(new LatLng(lat, lng)).title(MainActivity.members.get(i).getName());
                    }
                    Mmap.moveCamera(CameraUpdateFactory.newLatLngZoom(currentLocation, 15));

                } else {
                    System.out.println("아직 위치를 찾을 수 없습니다.");
                }
            }
        }
    }

    @Override
    public void onResume() {
        super.onResume();
        isPaused = false;
    }

    @Override
    public void onPause() {
        super.onPause();
        isPaused = true;
    }

    LocationListener locationListener = new LocationListener() {
        @Override
        public void onLocationChanged(Location location) {
            lat = location.getLatitude();
            lon = location.getLongitude();

            if (CurrentTimeInt == meetingTimeInt - 600) {
                new DbThread().start();


            }

        }

        @Override
        public void onStatusChanged(String s, int i, Bundle bundle) {
        }

        @Override
        public void onProviderEnabled(String s) {
        }

        @Override
        public void onProviderDisabled(String s) {
        }
    };

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        View view = inflater.inflate(R.layout.fragment_member_location, container, false);
        mContext = getActivity().getApplicationContext();
//
//        mapLayout = view.findViewById(R.id.mapLayout);
//        mapF = (SupportMapFragment) getFragmentManager().findFragmentById(R.id.mapF);
//
//
//        bt = view.findViewById(R.id.bt);
//        tv_meetingtime = view.findViewById(R.id.tv_meetingtime);
//
//
//        if (MainActivity.thisWeekStudy == null){
//            tv_meetingtime.setText("진행중인 스터디가 없습니다.");
//        }else{
//            meetingDate = meetingDate(MainActivity.thisWeekStudy.getDate());
//
//            tv_meetingtime.setText("약속시간: " + meetingDate);
//
//            CurrentTimeInt = (int) CurrentTime.getTime();
//            meetingTimeInt = (int) meetingDate.getTime();
//
//            new AttThread().start();
//
//        SupportMapFragment mapF = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.mapF);
//        mapF.getMapAsync(new OnMapReadyCallback() {
//            @Override
//            public void onMapReady(GoogleMap googleMap) {
//                Mmap = googleMap;
//                MarkerOptions markerOptions = new MarkerOptions();
//                for (int i = 0; i < MainActivity.studies.size(); i++) {
//                    if (MainActivity.studies.get(i).getStatus() == "진행") {
//                        for (int j = 0; j < MainActivity.studies.get(i).getMembers().size(); j++) {
//                            String[] latlngStr = MainActivity.studies.get(i).getMembers().get(j).getCurrentLocation().getLatlng().split(",");
//                            Double lat = Double.valueOf(latlngStr[0]);
//                            Double lng = Double.valueOf(latlngStr[1]);
//                            markerOptions.position(new LatLng(lat, lng)).title(MainActivity.studies.get(i).getMembers().get(j).getName());
//                        }
//                    }
//                }
//                String[] latlngStr = MainActivity.members.get(0).getCurrentLocation().getLatlng().split(",");
//                Double lat = Double.valueOf(latlngStr[0]);
//                Double lng = Double.valueOf(latlngStr[1]);
//                Mmap.moveCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(lat, lng), 15));
//
//            }
//
//        });
//
//        bt.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View view) {
//                updateMapInfo();
//                if (mapLayout.getVisibility() == View.GONE) {
//                    mapLayout.setVisibility(View.VISIBLE);
//                } else {
//                    mapLayout.setVisibility(View.GONE);
//                }
//            }
//        });
//
//        }
//        tv_meetingtime = view.findViewById(R.id.tv_meetingtime);
//        tv_meetingtime.setText("약속시간: " + meetingDate);
//
//
//        locationManager = (LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE);

        return view;
    }


    Handler Atthandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            if (!isPaused) {
                switch (msg.what) {
                    case 0: // error
                        att = (String) msg.obj;
                        for (int i = 0; i < MainActivity.studies.size(); i++) {
                            if (MainActivity.studies.get(i).getStatus() == "진행") {
                                for (int j = 0; j < MainActivity.studies.get(i).getMembers().size(); j++) {
                                    if (MainActivity.studies.get(i).getMembers().get(j).getName() == name) {
                                        MainActivity.studies.get(i).getMembers().get(j).setAtt(att);
                                    }
                                }
                            }
                        }
//                        MainActivity.updateDB();
                        break;
                    case 1:
                        att = (String) msg.obj;
                        for (int i = 0; i < MainActivity.studies.size(); i++) {
                            if (MainActivity.studies.get(i).getStatus() == "진행") {
                                for (int j = 0; j < MainActivity.studies.get(i).getMembers().size(); j++) {
                                    if (MainActivity.studies.get(i).getMembers().get(j).getName() == name) {
                                        MainActivity.studies.get(i).getMembers().get(j).setAtt(att);
//                                        MainActivity.updateDB();
                                        break;
                                    }

                                }

                            }

                        }
                }
            }
        }
    };


    public class AttThread extends Thread {
        @Override
        public void run() {
            Message msg = new Message();
            while (true) {
                if (CurrentTimeInt == meetingTimeInt) {
                    if (lat - meet_lat >= -10 && lat - meet_lat <= 10) {
                        if (lon - meet_lon >= -10 && lon - meet_lon <= 10) {
                            msg.what = 1;
                            msg.obj = "출석";
                            Atthandler.sendMessage(msg);
                            break;
                        }
                    } else {
                        msg.what = 1;
                        msg.obj = "지각";
                        Atthandler.sendMessage(msg);
                        break;
                    }
                }
            }
        }
    }

    public class DbThread extends Thread {
        @Override
        public void run() {
            String currentLocation = lat + "," + lon;
            for (int i = 0; i < MainActivity.studies.size(); i++) {
                if (MainActivity.studies.get(i).getStatus() == "진행") {
                    for (int j = 0; j < MainActivity.studies.get(i).getMembers().size(); j++) {
                        if (MainActivity.studies.get(i).getMembers().get(j).getName() == name) {
                            MainActivity.studies.get(i).getMembers().get(j).getCurrentLocation().setLatlng(currentLocation);
                        }
                    }
                }
            }
//            MainActivity.updateDB();
        }
    }
}
