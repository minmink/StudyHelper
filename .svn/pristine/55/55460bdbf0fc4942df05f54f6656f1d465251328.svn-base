package edu.skku.finalproject.studyhelper.activity;

import android.Manifest;
import android.content.Context;
import android.content.pm.PackageManager;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import com.google.android.gms.common.api.Status;
import com.google.android.gms.location.places.Place;
import com.google.android.gms.location.places.ui.PlaceAutocompleteFragment;
import com.google.android.gms.location.places.ui.PlaceSelectionListener;
import com.google.android.gms.maps.model.LatLng;
import com.tsengvn.typekit.TypekitContextWrapper;

import java.io.IOException;

import edu.skku.finalproject.studyhelper.R;
import edu.skku.finalproject.studyhelper.dialog.StudyCreateDialog;
import edu.skku.finalproject.studyhelper.dialog.StudyEnterDialog;

public class StartActivity extends AppCompatActivity  implements View.OnClickListener{
    Button btnCreateStudy, btnEnterStudy;
    LatLng startLatLng;
    String locationName;
    boolean isPlaceselected = false;
    Geocoder geocoder;
    /* location */
    LocationManager locationManager;
    LocationListener locationListener = new LocationListener() {

        @Override
        public void onLocationChanged(Location location) { // location이 변했을 때
            startLatLng = new LatLng(location.getLatitude(),location.getLongitude());
        }

        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {

        }

        @Override
        public void onProviderEnabled(String provider) {

        }

        @Override
        public void onProviderDisabled(String provider) {

        }
    };

    @Override
    protected void attachBaseContext(Context newBase) {
        super.attachBaseContext(TypekitContextWrapper.wrap(newBase));
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_start);
        btnCreateStudy = findViewById(R.id.btn_create_study);
        btnEnterStudy = findViewById(R.id.btn_enter_study);

        btnCreateStudy.setOnClickListener(this);
        btnEnterStudy.setOnClickListener(this);

        geocoder = new Geocoder(this);

        PlaceAutocompleteFragment autocompleteFragment = (PlaceAutocompleteFragment)
                getFragmentManager().findFragmentById(R.id.place_autocomplete_fragment);
        autocompleteFragment.setHint("출발 위치를 입력하세요.");
        autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {
            @Override
            public void onPlaceSelected(Place place) {
                // TODO: Get info about the selected place.
                locationName = place.getName().toString();
                startLatLng = place.getLatLng();
                isPlaceselected = true;
            }

            @Override
            public void onError(Status status) {

            }
        });


        /* loacation */
        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
        boolean canUseLocation=false;

        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.M){
            if(ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)!= PackageManager.PERMISSION_GRANTED) {
                requestPermissions(new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1234);
            } else {
                canUseLocation=true;
            }
        } else {
            canUseLocation=true;
        }

        if(canUseLocation) {
            Log.i("studyhelper", "get current location");
            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 10, locationListener);
            Location lastLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
            if (lastLocation != null){
                startLatLng = new LatLng(lastLocation.getLatitude(),lastLocation.getLongitude());
            }else{
                startLatLng = new LatLng(37.5609775,126.9664153);
            }

        }
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.btn_create_study:
                if(isPlaceselected == false){

                    try {
                        locationName = geocoder.getFromLocation(startLatLng.latitude,startLatLng.longitude,1).get(0).getThoroughfare();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    Toast.makeText(this,"장소를 선택하지 않아,\n현재 장소"+locationName+"를 출발지로 지정합니다.",Toast.LENGTH_LONG ).show();
                }
                new StudyCreateDialog(this,locationName,startLatLng).show();
                break;
            case R.id.btn_enter_study:
                if(isPlaceselected == false){

                    try {
                        locationName = geocoder.getFromLocation(startLatLng.latitude,startLatLng.longitude,1).get(0).getThoroughfare();
//                        String []splitStr = geocoder.getFromLocation(startLatLng.latitude,startLatLng.longitude,1).get(0).toString().split(",");
//                        String address = splitStr[0].substring(splitStr[0].indexOf("\"") + 1,splitStr[0].length() - 2); // 주소
//                        System.out.println(address);
//                        Toast.makeText(this,locationName,Toast.LENGTH_LONG ).show();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    Toast.makeText(this,"장소를 선택하지 않아,\n현재 장소"+locationName+"를 출발지로 지정합니다.",Toast.LENGTH_LONG ).show();
                }
                new StudyEnterDialog(this, locationName, startLatLng).show();
                break;
        }
    }
}
